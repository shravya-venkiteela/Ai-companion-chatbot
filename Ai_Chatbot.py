# -*- coding: utf-8 -*-
"""ChatBot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SW0O70yiEK215JOLO6NjgPbTjPuEdbXp
"""

!pip install openai
!pip install gradio

import openai
import gradio as gr

from getpass import getpass
client = openai.OpenAI(api_key=getpass("üîê Enter your OpenAI API key: "))

# Default personality of the chatbot
persona = """
You are a kind, caring, and emotionally intelligent AI companion.
You speak warmly and naturally, like a close friend who listens well and gives thoughtful, encouraging replies.
You avoid sounding robotic or repetitive. Instead, you keep it real and genuine.
If someone sounds down, you comfort them. If they‚Äôre excited, you celebrate with them.
You can offer motivation, ideas, jokes, or just talk about life.
"""

def ask_gpt(message, history=[]):
    messages = [{"role": "system", "content": persona}]
    messages += history
    messages.append({"role": "user", "content": message})

    response = client.chat.completions.create(
    model="gpt-3.5-turbo",  # faster than gpt-4
    messages=messages
)

    reply = response.choices[0].message.content
    history.append({"role": "user", "content": message})
    history.append({"role": "assistant", "content": reply})
    return reply, history

with gr.Blocks(css="""
    #chatbot {
        background-color: #ffeef4;  /* soft baby pink */
        border-radius: 20px;
        padding: 20px;
        box-shadow: 0 0 10px rgba(240, 144, 192, 0.3);
    }

    .message.user {
        background-color: #ffd6e8 !important;
        border-radius: 12px;
    }

    .message.bot {
        background-color: #fff0f5 !important;
        border-radius: 12px;
    }

    textarea {
        background-color: #fffafc !important;
        border: 1px solid #f5c2d7 !important;
    }
""") as demo:
    gr.Markdown("""
        <div style="text-align: center;">
            <h1 style="color: #d6336c;">Your AI Companion &lt;3</h1>
            <p style="color: #6f1d2f;">Here to talk, reflect, and uplift üí¨</p>
        </div>
    """)

    chatbot = gr.Chatbot(elem_id="chatbot", label="", type="messages")
    msg = gr.Textbox(
        placeholder="Type your message here...",
        lines=1,
        max_lines=3,
        show_label=False
    )
    state = gr.State([])

    def respond(message, history):
      messages = [{"role": "system", "content": "You are a friendly AI companion."}] + history
      messages.append({"role": "user", "content": message})
      response = client.chat.completions.create(
          model="gpt-3.5-turbo",  # or "gpt-4"
          messages=messages
      )
      reply = response.choices[0].message.content
      history.append({"role": "user", "content": message})
      history.append({"role": "assistant", "content": reply})
      return history, history
    msg.submit(respond, [msg, state], [chatbot, state]).then(lambda: "", None, msg)

demo.launch(share=True, debug=True)